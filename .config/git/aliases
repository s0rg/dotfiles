# vim: set ft=gitconfig:

[alias]
    aa = add --all
    br = branch -vv
    cm = commit -am
    co = checkout
    gr = grep -ni
    st = status
    ll = log --all --decorate --oneline --graph --stat
    ls = ls-files
    ta = tag -m '' -a
    bra = branch -vv -a
    cob = checkout -b
    cof = checkout -f
    com = !git co master && git pull
    mem = merge master
    wat = whatchanged
    put = push origin --tags
    stap = stash apply
    # tag add & push
    tap = "!f() { git tag -m '' -a ${1} && git push origin --tags; }; f"
    url = remote get-url origin
    # cleaner diff - no contents for deleted files
    did = diff --irreversible-delete
    dis = did --staged
    # change commit message
    chcm = commit --only --amend
    # list of "places of interest"
    todos = grep --break --heading --line-number -I --word-regexp -e TODO -e FIXME -e BUG
    # amends last commit
    amend = commit -a --amend --reuse-message=HEAD
    # commiter stats
    stats = shortlog -sn
    # get repo source URL
    origin = config --get remote.origin.url
    # get repo root dir
    root = rev-parse --show-toplevel
    # list of last 5 tags
    tags = !git tag -l | sort --version-sort | tail -n 5
    # list branches
    branches = !git branch -a --no-color | tr -d "[*[:blank:]]" | grep -v "HEAD" | sed -e "s/^remotes\\\\/origin\\\\///" | sort -u
    # fetch and removes deleted (at origin) branches
    ff = fetch --tags --prune --prune-tags --all
    # get repo root dir
    root = rev-parse --show-toplevel
    # age of repo
    born = !git log --pretty='format:%ar at %ai' --reverse | head -1
    # local aliases
    aliases = !git config -l | grep '^alias' | cut -c 7- | sort
    # repo maintaince
    tidy = "!f() { \
        git branch --merged | grep -v -E '^[* ]{2}m' | xargs -r -n 1 git branch -d ; \
        git reflog expire --all --expire=now ; \
        git gc --prune=now --aggressive ; \
        }; f"
    # zip
    zip = !git archive -o "$(basename "$(git root)")".zip HEAD
    tag-rm = push --delete origin
    undo = "!f() { git reset HEAD~${1:-1}; }; f"
