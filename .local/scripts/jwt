#!/usr/bin/env python3
# source: https://github.com/s0rg/dotfiles
#
# jwt decoder
#

import sys
import argparse
import json
from base64 import urlsafe_b64decode

from pygments import highlight, lexers, formatters

lexer = lexers.JsonLexer()
tform = formatters.TerminalFormatter()

parser = argparse.ArgumentParser(description="jwr decoder")
parser.add_argument("-s",
                    "--sign",
                    action="store_true",
                    help="also show signature block")
parser.add_argument("input", nargs='?', help="input string to (en/de)code")


def fancy_json(v):
    v = json.dumps(json.loads(v), sort_keys=True, indent=4)
    return highlight(v, lexer, tform)


def decode(p):
    return urlsafe_b64decode(p + "==")


def main():
    args = parser.parse_args()

    val = args.input
    if val is None:
        val = sys.stdin.read().strip()

    parts = val.split(".")
    if len(parts) != 3:
        print("malformed jwt!", file=sys.stderr)
        return 1

    print()
    print("HEADER: " + fancy_json(decode(parts[0])))
    print("BODY: " + fancy_json(decode(parts[1])))

    if args.sign:
        print("SIGNATURE: " + decode(parts[2]).hex())
        print()

    return 0


if __name__ == '__main__':
    sys.exit(main())

#vim:ft=py3
