#!/usr/bin/env python3
# source: https://github.com/s0rg/dotfiles
#
# prints docker container ip (for all networks available)
# usage: dip <container-id>
#

import sys
import argparse

import docker

parser = argparse.ArgumentParser(
    description="docker-ip finds out ip for container")
parser.add_argument("--net", help="specify network name")
parser.add_argument("--raw",
                    action="store_true",
                    help="do not decorate output")
parser.add_argument("target", help="target container id or name")


def get_container_addrs(c):
    rv = []

    nets = c.attrs["NetworkSettings"]["Networks"]
    for k, v in nets.items():
        rv.append((k, v["IPAddress"]))

    return sorted(rv, key=lambda n: n[0])


def print_one(name, addr, raw):
    if raw:
        print(addr)
    else:
        print("\t{} ip: {}".format(name, addr))


def print_all(name, addrs, raw):
    if not raw:
        print("{} addrs:".format(name))

    for net, addr in addrs:
        print_one(net, addr, raw)


def main():
    args = parser.parse_args()
    client = docker.from_env()
    container = client.containers.get(args.target)

    name = container.name
    addrs = list(get_container_addrs(container))
    addrd = dict(addrs)

    if len(addrs) == 1:
        print_one(name, addrs[0][1], args.raw)
    elif args.net != "" and args.net in addrd:
        print_one(name, addrd[args.net], args.raw)
    else:
        print_all(name, addrs, args.raw)

    return 0


sys.exit(main())
#vi:syntax=py3
